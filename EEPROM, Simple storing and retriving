/*
 * EEPROM.c
 *
 * Created: 05-03-2015 19:02:21
 *  Author: Rahul kumar
 */ 






#include <avr/io.h>
#include <util/delay.h>
#include <avr/eeprom.h>


// For details of EEPROM library , go to :
// http://www.nongnu.org/avr-libc/user-manual/group__avr__eeprom.html


#define F_CPU 16000000
#define BAUD 9600
#define UBRR 103

void Timer_init() // Prescalar =1024
{
	TCCR1A|=(1<<WGM10)|(1<<WGM11)|(1<<COM1A1)|(1<<COM1B1);
	TCCR1B|=(1<<CS10)|(1<<CS12)|(1<<WGM12);   // Prescalar=1024
	return ;
}

void ADC_init(void)
{
	ADCSRA|=(1<<ADEN)|(1<<ADPS2) |(1<<ADPS1) |(1<<ADPS0);
}

void USART_init()
{
	UCSRB|=(1<<RXEN)|(1<<TXEN)	;
	UCSRC|=(1<<UMSEL)|(1<<USBS)|(1<<UCSZ0)|(1<<UCSZ1)  ;	
}

void USART_Transmit( unsigned int data )
{
	/* Wait for empty transmit buffer */
	while ( !( UCSRA & (1<<UDRE)) )
	;
	/* Put data into buffer, sends the data */
	UDR = data;
}

unsigned int USART_Receive( void )
{
	/* Wait for data to be received */
	while ( !(UCSRA & (1<<RXC)) ) ; // w8 Until (RXC flag == 0) , when  it is equal to 0, buffer has unread data.
	
	/* Get and return received data from buffer ,i.e-read the data*/
	return UDR;
}


void EEPROM_write(unsigned int uiAddress, unsigned char ucData)
{
	/* Wait for completion of previous write */
	while(EECR & (1<<EEWE))
	;
	/* Set up address and data registers */
	EEAR = uiAddress;
	EEDR = ucData;
	/* Write logical one to EEMWE */
	EECR |= (1<<EEMWE);
	/* Start eeprom write by setting EEWE */
	EECR |= (1<<EEWE);
}


unsigned char EEPROM_read(unsigned int uiAddress)
{
	/* Wait for completion of previous write */
	while(EECR & (1<<EEWE))
	;
	/* Set up address register */
	EEAR = uiAddress;
	/* Start eeprom read by writing EERE */
	EECR |= (1<<EERE);
	/* Return data from data register */
	return EEDR;
}


int main(void)
{   
	 DDRB=255;
	 
	// USART_init();
	 int i,EEPROM_Data =0;
	 unsigned int EEPROM_add=0 ;  
    while(1)
    {  
		if(EEPROM_add>=1023)
		 EEPROM_add=0;
		
      //  Data=USART_Receive();
       //Data=EEPROM_add;
	     
		EEPROM_write(EEPROM_add,EEPROM_Data);
		EEPROM_Data=0;
        EEPROM_Data=EEPROM_read(EEPROM_add)  ;
      
	    EEPROM_add+=4;
		EEPROM_Data++;

		PORTB=EEPROM_Data;
        _delay_ms(5000); 
		
	//	USART_Transmit(1);
		
    }

  //while(1)
  //{
	  //
  //}

}

    
